{
	"$schema": "http://json-schema.org/schema",
	"$id": "https://maht.azurewebsites.net/inc/json-schemas/avatar.json",
	"required": ["id", "mbr_id", "being", "name", "categories"],
	"type": "object",
	"name": "Avatar",
	"properties": {
		"id": {
			"description": "uuid of avatar",
			"type": "string",
			"format": "uuid"
		},
		"mbr_id": {
			"type": "string",
			"description": "root member id: [sysName|id]",
			"$comment": "also partitionId for container; NOTE: sysName should not render down to any boolean version of false"
		},
		"parent_id": {
			"type": "string",
			"format": "uuid",
			"description": "parent id of avatar"
		},
		"assistant": {
			"type": "object",
			"$ref": "#/definitions/openai-gpt-assistant",
			"description": "assistant object GPT-assistant access",
			"$comment": "this could become an array of assistants, with `type` going away"
		},
		"being": {
			"type": "string",
			"const": "avatar",
			"description": "root constructor for avatar/agent in MyLife"
		},
		"categories": {
			"type": "array",
			"description": "array of categories for avatar",
			"items": {
				"type": "string",
				"maximum": 32,
				"minimum": 1,
				"description": "avatar-build category"
			},
			"maxItems": 12,
			"minItems": 1,
			"uniqueItems": true,
			"$comment": "Categories for any construct (i.e., not just avatars) are dynamically built by LLM and assigned on creation, spokes of the wheel of contextualization"
		},
		"command_word": {
			"type": "string",
			"minimum": 2,
			"maximum": 16,
			"default": "avatar",
			"description": "trigger for command mode"
		},
		"description": {
			"type": "string",
			"description": "avatar description"
		},
		"developers": {
			"type": "array",
			"description": "endpoint developers"
		},
		"name": {
			"type": "string",
			"maximum": 32,
			"minimum": 1,
			"description": "avatar system name",
			"$comment": "; NOTE: this is the name of the *avatar*, not the member"
		},
		"names": {
			"type": "array",
			"description": "avatar names array",
			"items": {
				"type": "string",
				"maximum": 32,
				"minimum": 1,
				"description": "avatar name"
			},
			"maxItems": 128,
			"minItems": 1,
			"uniqueItems": true,
			"$comment": "Can item contents reference the schema of the name property?"
		},
		"nickname": {
			"type": "string",
			"maximum": 64,
			"default": "avatar",
			"description": "avatar nickname"
		},
		"messages": {
			"type": "array",
			"description": "array of openai messages for avatar",
			"items": {
				"type": "object",
				"maximum": 64,
				"description": "openai message object",
				"$comment": "https://platform.openai.com/docs/api-reference/messages"
			}
		},
		"thread": {
			"type": "object",
			"description": "thread object for avatar",
			"$comment": "currently from openAI assistant technology"
		},
		"type": {
			"type": "string",
			"default": "openai-assistant",
			"enum": ["openai-assistant"],
			"$comment": "In attempt to make assistants more modular, define external system type here, and then add optional data-elements from appropriate sub-assistant type"	
		}
	},
	"definitions": [{
		"name": "openai-gpt-assistant",
		"required": ["id", "object", "created_at", "name", "description", "model"],
		"type": "object",
		"properties": {
			"id": {
				"type": "string",
				"description": "id on openai"
			},
			"object": {
				"type": "string",
				"const": "assistant",
				"description": "from openai node sdk, type of entity"
			},
			"created_at": {
				"type": "integer",
				"description": "UNIX timestamp"
			},
			"name": {
				"type": "string",
				"maximum": 256,
				"minimum": 1,
				"description": "name of assistant"
			},
			"description": {
				"type": "string",
				"maximum": 512,
				"minimum": 1,
				"description": "description of assistant"
			},
			"model": {
				"type": "string",
				"description": "model of assistant"
			},
			"instructions": {
				"type": "string",
				"maximum": 32768,
				"description": "instructions for assistant"
			},
			"tools": {
				"type": "array",
				"description": "A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant.",
				"items": {
					"oneOf": [
						{
							"$ref": "#/definitions/openai-gpt-code_interpreter"
						},
						{
							"$ref": "#/definitions/openai-gpt-retrieval"
						},
						{
							"$ref": "#/definitions/openai-gpt-function"
						}
					],
					"description": "tool for assistant"
				},
				"maxItems": 128,
				"minItems": 0,
				"uniqueItems": true
			},
			"file_ids": {
				"type": "array",
				"description": "A list of file IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order",
				"items": {
					"type": "string",
					"maximum": 256,
					"minimum": 1,
					"description": "file id for assistant"
				},
				"maxItems": 32,
				"minItems": 1,
				"uniqueItems": true
			},
			"metadata": {
				"type": "object",
				"description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long"
			}
		}
	},
	{
		"name": "openai-gpt-code_interpreter",
		"required": ["type"],
		"type": "object",
		"properties": {
			"type": {
				"type": "string",
				"const": "code_interpreter",
				"description": "The type of tool being defined"
			}
		}
	},
	{
		"name": "openai-gpt-retrieval",
		"required": ["type"],
		"type": "object",
		"properties": {
			"type": {
				"type": "string",
				"const": "retrieval",
				"description": "The type of tool being defined"
			}
		}
	},
	{
		"name": "openai-gpt-function",
		"required": ["type"],
		"type": "object",
		"properties": {
			"type": {
				"type": "string",
				"const": "function",
				"description": "The type of tool being defined"
			},
			"function": {
				"type": "object",
				"$ref": "#/definitions/openai-gpt-function-function",
				"description": "The type of function being defined"
			}
		}
	},
	{
		"name": "openai-gpt-function-function",
		"required": ["description", "name"],
		"type": "object",
		"properties": {
			"description": {
				"type": "string",
				"description": "A description of what the function does, used by the model to choose when and how to call the function"
			},
			"name": {
				"type": "string",
				"pattern": "^[a-zA-Z0-9_-]{1,64}$",
				"maximum": 64,
				"description": "The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
			},
			"parameters": {
				"type": "object",
				"description": "The parameters the functions accepts, described as a JSON Schema object. See the guide for examples, and the JSON Schema reference for documentation about the format. To describe a function that accepts no parameters, provide the value {\"type\": \"object\", \"properties\": {}}."
			}
		}
	}]
}