{
	"$schema": "http://json-schema.org/schema",
	"$id": "https://maht.azurewebsites.net/inc/json-schemas/avatar.json",
	"required": ["id", "mbr_id", "being", "categories", "context", "command_word", "description", "names"],
	"type": "object",
	"name": "Avatar",
	"properties": {
		"id": {
			"description": "uuid of avatar",
			"type": "string",
			"format": "uuid"
		},
		"mbr_id": {
			"type": "string",
			"description": "root member id: [sysName|id]",
			"$comment": "also partitionId for container; NOTE: sysName should not render down to any boolean version of false"
		},
		"parent_id": {
			"type": "string",
			"format": "uuid",
			"description": "parent id of avatar, can be a core member avatar or any sub-object in system, as referenced by uuid alone"
		},
		"assistant": {
			"type": "object",
			"$ref": "./openai/openai.json#/$defs/openai_gpt_assistant",
			"description": "assistant object GPT_assistant access",
			"$comment": "this could become an array of assistants, with `type` going away"
		},
		"being": {
			"type": "string",
			"const": "avatar",
			"description": "root constructor for avatar/agent in MyLife"
		},
		"categories": {
			"type": "array",
			"description": "array of categories for avatar",
			"items": {
				"type": "string",
				"maxLength": 32,
				"minLength": 1,
				"description": "avatar-build category"
			},
			"maxItems": 12,
			"minItems": 1,
			"uniqueItems": true,
			"$comment": "Categories for any construct (i.e., not just avatars) are dynamically built by LLM and assigned on creation, spokes of the wheel of contextualization"
		},
		"command_word": {
			"type": "string",
			"maxLength": 16,
			"minLength": 2,
			"default": "avatar",
			"description": "trigger for command mode"
		},
		"description": {
			"type": "string",
			"description": "avatar description"
		},
		"developers": {
			"type": "array",
			"description": "endpoint developers"
		},
		"context": {
			"type": "string",
			"default": "This avatar was auto-generated by the MyLife system on file creation date to fulfill MyLife's member contract with this member (anonymously identified by `mbr_id`)",
			"description": "avatar context: describes how avatar is used in the uber-context of MyLife",
			"$comment": "might describe the history of the avatar, or the context in which it was created, used, was successful, to whome it spoke, etc."
		},
		"name": {
			"type": "string",
			"maxLength": 32,
			"minLength": 1,
			"description": "avatar system name",
			"$comment": "may ultimately be removed in favor of `names` array"
		},
		"names": {
			"type": "array",
			"description": "avatar names array",
			"items": {
				"type": "string",
				"maxLength": 32,
				"minLength": 1,
				"description": "avatar name",
				"$comment": "will convert name to `name` object ultimately, should be independent file, as it can be applied to many (if not all) objects"
			},
			"maxItems": 128,
			"minItems": 1,
			"uniqueItems": true,
			"$comment": "Can item contents reference the schema of the name property?"
		},
		"nickname": {
			"type": "string",
			"maxLength": 64,
			"default": "avatar",
			"description": "avatar nickname"
		},
		"messages": {
			"type": "array",
			"items": {
				"type": "object",
				"maxItems": 256,
				"description": "openai message object",
				"$comment": "https://platform.openai.com/docs/api-reference/messages"
			},
			"description": "array of openai messages for avatar",
			"$comment": "NOTE: actually belongs in session, but here would only capture messages in active thread"
		},
		"purpose": {
			"type": "string",
			"description": "avatar purpose"
		},
		"type": {
			"type": "string",
			"default": "openai_assistant",
			"enum": ["openai_assistant"],
			"$comment": "In attempt to make assistants more modular, define external system type here, and then add optional data-elements from appropriate sub_assistant type"	
		}
	}
}