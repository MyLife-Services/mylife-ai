{
	"$schema": "http://json-schema.org/schema",
	"$id": "https://maht.azurewebsites.net/inc/json-schemas/message.json",
	"required": ["avatar_id", "being", "id", "mbr_id", "messages", "type"],
	"type": "object",
	"name": "Message",
	"properties": {
		"avatar_id": {
			"type": "string",
			"format": "uuid",
			"description": "id of avatar from/to which message was generated"
		},
		"being": {
			"type": "string",
			"const": "message",
			"description": "root constructor for message in MyLife"
		},
		"id": {
			"description": "uuid of message",
			"type": "string",
			"format": "uuid"
		},
		"mbr_id": {
			"type": "string",
			"description": "root member id: [sysName|id]",
			"$comment": "also partitionId for container; NOTE: sysName should not render down to any boolean version of false"
		},
		"message": {
			"type": "object",
			"$ref": "#/$defs/message_openai_assistant",
			"description": "message object"
		},
        "system": {
            "type": "string",
			"default": "openai_assistant",
            "description": "message type",
            "enum": ["openai_assistant", "openai_completion", "openai_finetune"]
        },
        "type": {
            "type": "string",
			"default": "chat",
            "description": "message type",
            "enum": ["chat", "greeting", "system", "error", "warning", "info", "debug"]
        }
	},
	"additionalProperties": true,
	"$defs": {
		"annotation_openai_assistant":{
			"name": "Annotation_openai_assistant",
			"type": "object",
			"required": ["File_citation", "File_path"],
			"properties": {
				"File_citation": {
					"type": "object",
					"$ref": "#/$defs/citation_openai_assistant",
					"description": "A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the `retrieval` tool to search files"
				},
				"File_path": {
					"type": "object",
					"$ref": "#/$defs/file_path_openai_assistant",
					"description": "A URL for the file that's generated when the assistant used the code_interpreter tool to generate a file"
				}
			},
			"additionalProperties": false
		},
		"citation_openai_assistant": {
			"name": "Citation_openai_assistant",
			"type": "object",
			"required": ["type", "text"],
			"properties": {
				"type": {
					"type": "string",
					"const": "file_citation",
					"$ref": "#/$defs/file_citation_openai_assistant",
					"description": "A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the `retrieval` tool to search files"
				},
				"text": {
					"type": "string",
					"description": "The text in the message content that needs to be replaced"
				},
				"end_index": {
					"type": "integer",
					"description": "The index of the last character of the text that needs to be replaced"
				},
				"start_index": {
					"type": "integer",
					"description": "The index of the first character of the text that needs to be replaced"
				}
			},
			"additionalProperties": false
		},
		"content_openai_assistant": {
			"name": "Content_openai_assistant",
			"type": "object",
			"required": ["type"],
			"properties": {
				"type": {
					"type": "string",
					"default": "text",
					"enum": ["image_file","text"],
					"description": "type of content, accepts text or image_file; when text, property filled is called `text`, otherwise called `image_file`"
				},
				"text": {
					"type": "object",
					"$ref": "#/$defs/content_text_openai_assistant",
					"description": "content text is present as { text: text, annotations: [] }"
				},
				"image_file": {
					"type": "string",
					"$ref": "#/$defs/image_file_openai_assistant",
					"description": "file id of attachment"
				}
			},
			"additionalProperties": false
		},
		"content_text_openai_assistant": {
			"name": "Content_text_openai_assistant",
			"type": "object",
			"required": ["type", "text"],
			"properties": {
				"type": {
					"type": "string",
					"const": "text",
					"description": ""
				},
				"text": {
					"type": "object",
					"$ref": "#/$defs/content_text_text_openai_assistant",
					"description": "text sub-object"
				}
			},
			"additionalProperties": false
		},
		"content_text_text_openai_assistant": {
			"name": "Content_text_text_openai_assistant",
			"type": "object",
			"required": ["value", "annotations"],
			"properties": {
				"value": {
					"type": "string",
					"const": "text",
					"description": "text of message"
				},
				"annotations": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/$defs/annotation_openai_assistant",
						"description": "annotations of text"
					},
					"description": "text sub-object"
				}
			},
			"additionalProperties": false
		},
		"file_citation_openai_assistant": {
			"name": "File_citation_openai_assistant",
			"type": "object",
			"required": ["file_id", "quote"],
			"properties": {
				"file_id": {
					"type": "string",
					"description": "The ID of the specific File the citation is from"
				},
				"quote": {
					"type": "string",
					"description": "The specific quote in the file"
				}
			},
			"additionalProperties": false
		},
		"file_path_openai_assistant": {
			"name": "File_path_openai_assistant",
			"type": "object",
			"required": ["file_id"],
			"properties": {
				"file_id": {
					"type": "string",
					"description": "The ID of the file that was generated"
				}
			},
			"additionalProperties": false
		},
		"image_file_openai_assistant": {
			"name": "Image_file_openai_assistant",
			"type": "object",
			"required": ["file_id"],
			"properties": {
				"file_id": {
					"type": "string",
					"description": "The File ID of the image in the message content"
				}
			},
			"additionalProperties": false
		},
		"message_openai_assistant": {
			"name": "Message_openai_assistant",
			"type": "object",
			"required": ["assistant_id", "content", "created_at", "id", "object", "role", "thread_id"],
			"properties": {
				"assistant_id": {
					"type": "string",
					"default": "",
					"description": "string of assistant id, begins `asst_`"
				},
				"content": {
					"type": "array",
					"default": [],
					"items": {
						"type": "object",
						"$ref": "#/$defs/content_openai_assistant",
						"description": "openai assistant message content objects"
					},
					"uniqueItems": true
				},
				"created_at": {
					"type": "integer",
					"description": "UNIX date-time of message creation"
				},
				"id": {
					"type": "string",
					"description": "string of message id, beings `msg_`"
				},
				"file_ids": {
					"type": "array",
					"description": "array of user file ids"
				},
				"metadata": {
					"type": "object",
					"description": "object of metadata, using any key:value pairs in JSON; 16 pair limit",
					"$comment": "example: metadata={ \"any-key-name\": \"value\" }\nmay/may not overwrite thread/run versions of metadata as well, unclear"
				},
				"object": {
					"type": "string",
					"const": "message_openai_assistant",
					"description": "object type"
				},
				"role": {
					"type": "string",
					"default": "user",
					"description": "",
					"enum": ["user", "assistant"]
				},
				"run_id": {
					"type": "string",
					"default": "",
					"description": "uuid of run that submitted or generated message, when applicable"
				},
				"thread_id": {
					"type": "string",
					"default": "",
					"description": "uuid of message thread"
				}
			},
			"additionalProperties": false,
			"$comment": "openAI assistants interact with chat in a new way, they create a thread for the conversation and then apply a model that *runs* the thread and generates messages; this object is a direct capture of this object"
		},
		"message_member_chat": {
			"name": "Message_member_chat",
			"type": "object",
			"required": ["agent", "category", "id", "message", "type"],
			"properties": {
				"agent": {
					"const": "member",
					"enum": ["assistant", "member", "server", "user"],
					"type": "string",
					"description": "type of entity submitting",
					"$comment": "three distinct and possible submittors: assistant (deprecate to avatar/agent), member (human), user (human)"
				},
				"id": {
					"type": "string",
					"format": "uuid",
					"description": "uuid of message",
					"$comment": "interesting note: id could be sent from server in previous request in anticipation of recall; could be nice way to handshake and place onus of security downstream?"
				},
				"message": {
					"type": "string",
					"minLength": 1,
					"maxLength": 16000,
					"description": "member-typed text",
					"$comment": "currently flat, represents end results of keystrokes [not including backspace or rewrites]; note wrapper-like properties here, such as response_time, where such action-over-time structures could be captured when relevant and worth the data-parsing"
				},
				"response_time": {
					"type": "integer",
					"description": "UNIX date-time of front-end receipt to delivery of response",
					"$comment": "tracks from point of delivery of request to point of delivery of response; can be used to track response time of member, assistant and potentially MyLife server services; could contribute to extrapolate other facets of human behavioral responses with digital interface devices"
				},
				"type": {
					"type": "string",
					"default": "chat",
					"description": "message type",
					"enum": ["chat", "system", "error", "warning", "info", "debug"]
				}
			},
			"additionalProperties": false
		}
	}
}