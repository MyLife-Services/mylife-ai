openapi: 3.1.0
info:
  title: MyLife Diary Bot API
  description: This API is for receiving webhooks from [MyLife's public Diary Bot instance](https://chatgpt.com/g/g-rSCnLVUKd-mylife-diary-bot-prototype). All diary submissions are referred to as `entry` within this API. 20240927 update @mookse added `obscure` pathway
  version: 1.0.1
servers:
  - url: https://mylife.ngrok.app/api/v1
    description: Local development endpoint using ngrok for testing the MyLife Diary Bot GPT.
  - url: https://humanremembranceproject.org/api/v1
    description: Production endpoint for receiving entries from the MyLife Diary Bot instance.
security:
  - bearerAuth: []
paths:
  /keyValidation/{mid}:
    post:
      x-openai-isConsequential: false
      operationId: MyLifeKeyValidation
      summary: MyLife Diary Bot will access this endpoint to validate a `memberKey` in MyLife.
      description: Endpoint for handling incoming registration webhook data from the MyLife GPT service.
      parameters:
        - name: mid
          in: path
          required: true
          description: The `memberKey` data to be sent by MyLife Diary Bot. Visitor enters memberKey and it is kept in GPT memory and sent with each request so that MyLife knows partition.
          example: memberHandle|ae3a090d-1089-4110-8575-eecd119f9d8e
          schema:
            maxLength: 256
            minLength: 40
            type: string
      responses:
        "200":
          description: A successful response indicating the member key is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Valid member.
                  data:
                    type: object
                    properties:
                      mbr_id:
                        maxLength: 256
                        minLength: 40
                        type: string
                      updates:
                        type: string
                      interests:
                        type: string
                      birthDate:
                        type: string
                        format: date-time
                      birthPlace:
                        type: string
                      fullName:
                        type: string
                      preferredName:
                        type: string
        "400":
          description: Invalid member. Field `memberKey` is not valid, check again with member.
  /entry/{mid}:
    post:
      x-openai-isConsequential: false
      operationId: MyLifeSaveEntry
      summary: MyLife Diary Bot will access this endpoint to log an `entry` document in MyLife.
      description: Endpoint for handling incoming entry data from the MyLife GPT service. Each entry represents a diary submission from the user, and the bot handles tagging and metadata generation.
      parameters:
        - name: mid
          in: path
          required: true
          description: The `memberKey` data to be sent by MyLife Biographer Bot. Visitor enters memberKey and it is kept in GPT memory and sent with each request so that MyLife knows partition. Is **not** just a guid/uuid.
          example: memberHandle|ae3a090d-1089-4110-8575-eecd119f9d8e
          schema:
            maxLength: 256
            minLength: 40
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: The entry data sent by MyLife Diary Bot.
              type: object
              required:
                - content
                - form
                - keywords
                - mood
                - summary
                - title
              properties:
                content:
                  description: The raw content of the `entry` as submitted by the user, concatenated from multiple exchanges when appropriate.
                  maxLength: 20480
                  type: string
                form:
                  const: diary
                  description: Constant form of "diary"
                  type: string
                keywords:
                  description: MyLife Diary Bot interprets and infers keywords relevant to this `entry`. Should NOT include names of individuals (there is a property for this).
                  items:
                    description: A single word or short phrase to tag `entry` content.
                    maxLength: 64
                    type: string
                  maxItems: 12
                  minItems: 3
                  type: array
                mood:
                  description: The mood of the `entry` as interpreted by the Diary Bot.
                  example: happy
                  maxLength: 64
                  type: string
                relationships:
                  description: MyLife Diary Bot does its best to record individuals (or pets) mentioned in this `entry`.
                  items:
                    description: A name of a relational individual/pet relevant to the `entry` content.
                    type: string
                  maxItems: 24
                  type: array
                summary:
                  description: A detailed summary of the `entry` as interpreted by the Diary Bot.
                  maxLength: 20480
                  type: string
                title:
                  description: A distinct title for this `entry` as determined by the Diary Bot.
                  maxLength: 256
                  type: string
      responses:
        "200":
          description: Entry submitted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    const: true
                    example: true
                  message:
                    type: string
                    example: Entry submitted successfully.
        "400":
          description: No entry summary provided. Use the `summary` field.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    const: false
                    example: false
                  message:
                    type: string
                    example: No entry summary provided. Use the `summary` field.
  /obscure/{mid}:
    post:
      x-openai-isConsequential: false
      operationId: MyLifeObscureEntry
      summary: MyLife Diary Bot will access this endpoint to have the MyLife system obscure an `entry` summary on behalf of member.
      description: Endpoint for handling incoming request to obscure an entry summary from the MyLife GPT service.
      parameters:
        - name: mid
          in: path
          required: true
          description: The `memberKey` data to be sent by MyLife Biographer Bot. Visitor enters memberKey and it is kept in GPT memory and sent with each request so that MyLife knows partition. Is **not** just a guid/uuid.
          example: memberHandle|ae3a090d-1089-4110-8575-eecd119f9d8e
          schema:
            maxLength: 256
            minLength: 40
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: The itemId identified for the `entry` to obscure.
              type: object
              required:
                - itemid
              properties:
                itemid:
                  description: The raw content of the `entry` as submitted by the user, concatenated from multiple exchanges when appropriate.
                  maxLength: 20480
                  type: string
      responses:
        "200":
          description: Entry obscured successfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - action
                properties:
                  action:
                    type: string
                    example: Action to take given that the obscure command was successful.
                  obscuredSummary:
                    type: string
                    example: The newly-created obscured content.
                  success:
                    type: boolean
                    const: true
                    example: true
        "400":
          description: System encountered an error while obscuring the member `entry`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    const: false
                    example: false
                  message:
                    type: string
                    example: No entry summary provided. Use the `summary` field.