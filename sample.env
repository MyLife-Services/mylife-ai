### Alpha MyLife Build Sample Environment Variables File
## OpenAI settings
# private required string | host openai API key, [see details](https://beta.openai.com/docs/developer-quickstart/your-api-keys)
OPENAI_API_KEY=sk-...
# required string | current openai API base url
OPENAI_BASE_URL=https://api.openai.com/v1
# required string | current MyLife source code github url
OPENAI_MAHT_GITHUB=https://github.com/MyLife-Services/mylife-maht.git
# required number | 2000 chars (not tokens) is the max; disallows large code pastes, or rather, converts them as appropriate to file(s); **also** converts large text pastes to files a human member can use as well, though functionality TODO
OPENAI_MAX_CONTEXT_WINDOW=2000
# required number | max tokens for openAI response
OPENAI_MAX_TOKENS=1024
# required string | default avatar engine
OPENAI_MODEL_CORE="gpt-3.5-turbo"
# private optional string  | openAI model tuned instance
OPENAI_MODEL_MAHT=
# secure optional string | MyLife organizational openai API key; unclear how precisely it is used in the openAI request configs, but ultimately could be used to offer alternate organization hosts of MyLife instances
OPENAI_ORG_KEY=sk-...
# optional number | openAI model temperature, somewhat deprecated
OPENAI_TEMP=0.9
# optional number | openAI model API timeout
OPENAI_TIMEOUT=30000
## KOA Settings
# optional number | Koa Port
PORT=3000
### MyLife settings
## MyLife Version settings
# required string | current MyLife Version
MYLIFE_VERSION="Alpha-1.0"
## MyLife Azure Cosmos DB settings
# secure required string | MyLife DB endpoint, must get from MyLife organization
MYLIFE_DB_ENDPOINT=
# secure required string | MyLife DB name, must get from MyLife organization
MYLIFE_DB_NAME=
# secure required string | MyLife DB RW protection, must get from MyLife organization
MYLIFE_DB_RW=
# secure required string | MyLife DB RX protection, must get from MyLife organization
MYLIFE_DB_RX=
# secure required string | MyLife DB container, must get from MyLife organization
MYLIFE_DB_CONTAINER_NAME=
### MyLife Host Server settings
## MyLife Hosting settings
# private required string | MyLife Member ID of satellite host
MYLIFE_SERVER_MBR_ID=
# private required array | List of MyLife Member IDs who may be managed by this host; array of 
# TODO: convert to secure inside system
MYLIFE_HOSTED_MBR_ID=[]
## MyLife Session settings
# private required string | Session key for MyLife Host Server, creates session token prefix
MYLIFE_SESSION_KEY="bogus-content-with-incremental-numbers-001"
# private required number | in ms, session timeout, default 4 hours: 14,400,000ms { 4 * 60 * 60 * 1000 }
MYLIFE_SESSION_TIMEOUT_MS=14400000
## MyLife POSTGRES Embedding Server API settings
# private required string | MyLife POSTGRES embedding db host url
MYLIFE_EMBEDDING_SERVER_URL=http://mylife-embedding-server
# private required number | MyLife POSTGRES embedding db host port
MYLIFE_EMBEDDING_SERVER_PORT=8000
# private required string | MyLife POSTGRES embedding db host bearer token
MYLIFE_EMBEDDING_SERVER_BEARER_TOKEN=
# public required number | MyLife POSTGRES embedding db host file size limit; default=1MB = 1024 * 1024 * 1
MYLIFE_EMBEDDING_SERVER_FILESIZE_LIMIT= 1048576
# private required number | MyLife POSTGRES embedding db host file size limit for admin; default=10MB = 1024 * 1024 * 10
MYLIFE_EMBEDDING_SERVER_FILESIZE_LIMIT_ADMIN= 10485760
## Document Notes
# documentation for the above variables can be found comments
# - secure/private/(public[default]): secure variables should not be shared with anyone, private variables should not be shared with anyone outside of hosted server environment, public variables are available to the system, and could be shared with anyone (though not recommended); example: Version, Port, etc may well be public in HTML, but such things as file-size limits, temperatures, etc might be available to technical description pages, but not to the browsing public
# - required/optional: required variables must be set for the server to run, optional variables are not required for the server to run
# - [string/]: variable type